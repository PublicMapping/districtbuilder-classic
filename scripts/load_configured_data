#!/bin/bash
set -e

if [[ -n "${DB_DEBUG}" ]]; then
    set -x
fi

if [[ -n "${GIT_COMMIT}" ]]; then
  GIT_COMMIT="${GIT_COMMIT:0-7}"
else
  GIT_COMMIT="latest"
fi

set -u


function usage() {

    echo -n \
"Usage: $(basename "$0") [-h | --help ][-p | --production] [-c=/path/to/config | --config=/path/to/config]

Configure the application with demo data loaded from /data/districtbuilder_data.zip
"
}

function load_configured_data() {
    echo "Unzipping shapefile"
    docker-compose \
        exec -T django \
        unzip -o /data/districtbuilder_data.zip -d /data

    echo "Loading shapefiles into database"
    docker-compose \
        exec -T django ./manage.py setup "${configPath}" -g0 -g1

    echo "Nesting geolevels"
    docker-compose \
        exec -T django ./manage.py setup "${configPath}" -n0 -n1

    echo "Creating template plans"
    docker-compose \
        exec -T django ./manage.py setup "${configPath}" -t

    echo "Creating database views"
    docker-compose \
        exec -T django ./manage.py setup "${configPath}" --views

    echo "Configuring geoserver"
    docker-compose \
        exec -T django ./manage.py setup "${configPath}" -G

    echo "Creating translation files"
    docker-compose \
        exec -T django ./manage.py setup "${configPath}" -l
}

if [ "${BASH_SOURCE[0]}" = "${0}" ]
then
    configPath="config/config.xml"
    DATA_CONTAINERS=("postgres" "django")
    for FLAG in "${@}"
    do
        echo "Processing flag ${FLAG}"
        case "${FLAG}" in
            --help|-h)
                usage
                exit
                ;;
            --production|-p)
                # Make these environment variables available
                # to docker-compose in production.
                export COMPOSE_FILE="docker-compose.yml:docker-compose.production.yml"
                export GIT_COMMIT
                DATA_CONTAINERS=("django")
                ;;
            --config=*|-c=*)
                configPath="${FLAG#*=}"
                ;;
            *)
                echo "Flag ${FLAG} is invalid. Skipping..."
                ;;
        esac
    done

        docker-compose up -d "${DATA_CONTAINERS[@]}"
        load_configured_data
fi
