#!/bin/bash
set -e

if [[ -n "${DB_DEBUG}" ]]; then
    set -x
fi

if [[ -n "${GIT_COMMIT}" ]]; then
  GIT_COMMIT="${GIT_COMMIT:0-7}"
else
  GIT_COMMIT=$(git rev-parse --short HEAD)
fi


function usage() {

    echo -n \
"Usage: $(basename "$0") [config file path]

Configure the application with demo data loaded from /data/districtbuilder_data.zip
"
}

function load_configured_data() {
    echo "Unzipping shapefile"
    docker-compose \
        exec -T django \
        unzip -o /data/districtbuilder_data.zip -d /data

    echo "Loading shapefiles into database"
    docker-compose \
        exec -T django ./manage.py setup "${configPath}" -g0 -g1 -g2

    echo "Nesting geolevels"
    docker-compose \
        exec -T django ./manage.py setup "${configPath}" -n0 -n1 -n2

    echo "Creating template plans"
    docker-compose \
        exec -T django ./manage.py setup "${configPath}" -t

    echo "Creating database views"
    docker-compose \
        exec -T django ./manage.py setup "${configPath}" --views

    echo "Configuring geoserver"
    docker-compose \
        exec -T django ./manage.py setup "${configPath}" -G

    echo "Creating translation files"
    docker-compose \
        exec -T django ./manage.py setup "${configPath}" -l
}

if [ "${BASH_SOURCE[0]}" = "${0}" ]
then
    if [ "${1:-}" = "--help" ]
    then
        usage
    else
        configPath=${1:-config/config.xml}
        if [ "${1:-}" = "--production" ]
        then
          # Make these environment variables available
          # to docker-compose in production.
          export COMPOSE_FILE="docker-compose.yml:docker-compose.production.yml"
          export GIT_COMMIT

          DATA_CONTAINERS=("django")
        else
          DATA_CONTAINERS=("postgres" "django")
        fi
        docker-compose up -d "${DATA_CONTAINERS[@]}"
        load_configured_data
    fi
    exit
fi

